# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
workflows:
  version: 2
  build:
    jobs:
      - test-3.8
      - test-3.9
      - test-3.10
jobs:
  test-3.8: &test-template
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: cimg/python:3.8
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      # - restore_cache:
      #     keys:
      #     - v1-dependencies-{{ checksum "requirements.txt" }}
      #     # fallback to using the latest cache if no exact match is found
      #     - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
            pip install coverage coveralls
            pip install .

      # - save_cache:
      #     paths:
      #       - ./venv
      #     key: v1-dependencies-{{ checksum "requirements.txt" }}
        
      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            coverage run --source smote_variants tests/tests.py

      - store_artifacts:
          path: test-reports
          destination: test-reports
          
  test-3.9:
    <<: *test-template
    docker:
      - image: cimg/python:3.9
  
  test-3.10:
    <<: *test-template
    docker:
      - image: cimg/python:3.10

 
